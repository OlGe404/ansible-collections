---
- name: Ensure /etc/apt/keyrings dir exists
  become: true
  ansible.builtin.file:
    state: directory
    path: /etc/apt/keyrings
    owner: root
    mode: "go+r"
  register: apt_keyrings_dir

- name: Download apt repo keys
  become: true
  when: item.value.key_url is defined
  with_dict: "{{ apt_repos }}"
  loop_control:
    label: "{{ item.key }}"
  ansible.builtin.get_url:
    url: "{{ item.value.key_url }}"
    # Use ".asc" instead of ".gpg" as file extension to dearmor the key, if item.value.dearmor_key=true
    dest: "{{ apt_keyrings_dir.path }}/{{ item.key }}.{{ 'asc' if item.value.dearmor_key else 'gpg' }}"
    owner: root
    mode: "go+r"
  register: download_apt_key
  until: download_apt_key is succeeded
  retries: 3
  delay: 3

- name: Add PPA apt repos
  become: true
  when: item.value.uri is search('ppa:')
  with_dict: "{{ apt_repos }}"
  loop_control:
    label: "{{ item.key }}"
  ansible.builtin.apt_repository:
    repo: "{{ item.value.uri }}"
    update_cache: false

- name: Validate apt repos spec
  when: item.value.uri is not search('ppa:')
  with_dict: "{{ apt_repos }}"
  loop_control:
    label: "{{ item.key }}"
  ansible.utils.validate:
    data: "{{ item.value }}"
    engine: ansible.utils.jsonschema
    criteria:
      - "{{ lookup('file', '{{ role_path }}/files/apt_repo_schema.json') }}"

- name: Add apt repos
  become: true
  when: item.value.uri is not search('ppa:')
  with_dict: "{{ apt_repos }}"
  loop_control:
    label: "{{ item.key }}"
  ansible.builtin.apt_repository:
    update_cache: false
    repo: >-
      deb
      [arch={{ apt_deb_architectures[ansible_facts['architecture']] if item.value.architecture == 'auto' else item.value.architecture }}
      signed-by={{ apt_keyrings_dir.path }}/{{ item.key }}.{{ 'asc' if item.value.dearmor_key else 'gpg' }}]
      {{ item.value.uri }}
      {{ ansible_facts['distribution_release'] if item.value.suite == 'auto' else item.value.suite }}
      {{ item.value.components }}

- name: Update apt repo cache
  become: true
  ansible.builtin.apt:
    update_cache: true
