---
- name: Assert default vars types
  ansible.builtin.assert:
    that:
      - distro_packages_base is mapping
      - distro_packages_extra is mapping
      - distro_packages_repos_base is mapping
      - distro_packages_repos_extra is mapping
    fail_msg: >-
      The vars 'distro_packages_base', 'distro_packages_extra' and 'distro_packages_repos'
      have to be of type 'dict'.

- name: Ensure os_family fact
  when: ansible_facts['os_family'] is undefined
  ansible.builtin.setup:
    gather_subset:
      - os_family

- name: Debug print os_family
  ansible.builtin.debug:
    var: ansible_facts['os_family']
    verbosity: 1

- name: Merge base and extra distro_packages
  ansible.builtin.set_fact:
    merged_distro_packages: "{{ distro_packages_base | combine(distro_packages_extra) }}"

- name: Create list of distro_packages to install
  loop: "{{ merged_distro_packages | dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  ansible.builtin.set_fact:
    distro_packages: "{{ distro_packages |  default([]) + [item.key ~ ('=' ~ item.value if item.value else '')] }}"

- name: Debug print distro_packages
  ansible.builtin.debug:
    var: distro_packages
    verbosity: 1

- name: Merge base and extra distro_packages_repos
  ansible.builtin.set_fact:
    distro_packages_repos: "{{ distro_packages_repos_base | combine(distro_packages_repos_extra) }}"

- name: Debug print distro_packages_repos
  ansible.builtin.debug:
    var: distro_packages_repos
    verbosity: 1

- name: Include tasks for os_family
  when: distro_packages | length > 0
  block:
    - name: Include apt.yaml
      when: ansible_facts['os_family'] == "Debian"
      ansible.builtin.include_tasks:
        file: apt.yml

    - name: Include apk.yaml
      when: ansible_facts['os_family'] == "Alpine"
      ansible.builtin.include_tasks:
        file: apk.yml

    - name: Include dnf.yaml
      when: ansible_facts['os_family'] == "RedHat"
      ansible.builtin.include_tasks:
        file: dnf.yml
