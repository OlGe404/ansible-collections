---
- name: Assert default vars types
  ansible.builtin.assert:
    that:
      - install_docker_daemon_json is mapping
    fail_msg: >-
      The var 'install_docker_daemon_json' needs to be of type 'dict'.

- name: Ensure os_family fact and user_id facts
  when:
    - ansible_facts['os_family'] is undefined
    - ansible_facts['user_id'] is undefined
  ansible.builtin.setup:
    gather_subset:
      - os_family
      - user_id

- name: Debug print os_family and user_id
  ansible.builtin.debug:
    msg: >-
      os_family: {{ ansible_facts['os_family'] }},
      user_id: {{ ansible_facts['user_id'] }}
    verbosity: 1

- name: Include tasks for os_family
  block:
    - name: Include apt.yaml
      when: ansible_facts['os_family'] == "Debian"
      ansible.builtin.include_tasks:
        file: apt.yml

    - name: Include dnf.yaml
      when: ansible_facts['os_family'] == "RedHat"
      ansible.builtin.include_tasks:
        file: dnf.yml

- name: Create docker group
  become: true
  ansible.builtin.group:
    name: docker

- name: Add user to docker group
  become: true
  ansible.builtin.user:
    name: "{{ ansible_facts['user_id'] }}"
    append: true
    groups: docker

- name: Ensure /etc/docker dir
  become: true
  ansible.builtin.file:
    state: directory
    path: /etc/docker
    owner: "{{ ansible_facts['user_id'] }}"
    group: root
    mode: "0644"

- name: Create docker daemon.json conf
  become: true
  ansible.builtin.blockinfile:
    create: true
    path: /etc/docker/daemon.json
    owner: "{{ ansible_facts['user_id'] }}"
    group: root
    mode: "0644"
    block: "{{ install_docker_daemon_json }}"
